name: linux-x86_64

on:
  pull_request:
  push:
    branches:
      - main
      - feature-*
      - test-*
      - fix-*
    paths-ignore:
      - '**/README.md'
      - 'examples/**'
      - '.github/workflows/nerves-*'
      - '.github/workflows/macos-*'
  workflow_dispatch:

concurrency:
  group: build-and-test-linux-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mix_test:
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ImageOS: ubuntu20

    container:
      image: ubuntu:20.04
      options: --privileged --ulimit core=-1 --security-opt seccomp=unconfined

    steps:
      - uses: actions/checkout@v2

      - name: Enable Core Dump
        run: |
          ulimit -c
          ulimit -c unlimited
          ulimit -c
          DEBIAN_FRONTEND=noninteractive apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y wget git curl build-essential gcc g++ libffi-dev pkg-config unzip

      - uses: erlef/setup-beam@v1
        with:
          otp-version: 24.2
          elixir-version: 1.13.3

      - name: Compile and Test
        run: |
          export MIX_ENV=test
          mix deps.get
          export CFLAGS="-fsanitize=address -Og -g3 -D OTTER_WRAP_SIGSEGV -fno-omit-frame-pointer"
          export CMD="$(ELIXIR_CLI_DRY_RUN=1 mix)"
          export CMD_ARGS="$(echo ${CMD} | cut -c4-)"
          export ERL="$(which erl)"
          export ERL_BASE="$(dirname $(dirname ${ERL}))"
          export ELREXEC="$(find "${ERL_BASE}" -name erlexec)"
          export BINDIR="$(dirname ${ELREXEC})"
          export START_BOOT="$(find $ERL_BASE -name start.boot | grep -v release)"
          export ROOTDIR="$(dirname $(dirname ${START_BOOT}))"
          export EMU=beam
          bash -c "$ELREXEC $CMD_ARGS test" || true
          bash -c "LD_PRELOAD=$(gcc -print-file-name=libasan.so) SKIP_COMPILE=yes $ELREXEC $CMD_ARGS test" || true
          unset CFLAGS
          echo '/tmp/core.%h.%e.%t' > /proc/sys/kernel/core_pattern
          mix test || ls /tmp/core*
          bash ci/repeat-run-mix-test.sh || true
          ls /tmp/core*
          gdb --batch --quiet -ex "thread apply all bt full" -ex "quit" $ELREXEC /tmp/core.*
